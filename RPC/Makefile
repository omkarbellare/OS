CC = gcc
CFLAGS = -g -DRPC_SVC_FG
RPCGEN_FLAG = -C
LFLAGS = -lpthread

all: proxy compress_server client

# the executables: compress_client and compress_server

client:  
	$(CC) $(CFLAGS) client.c $(DEBUG) -o client $(LFLAGS)

proxy: proxy.o compress_clnt.o compress_xdr.o
	$(CC) -o proxy proxy.o compress_clnt.o compress_xdr.o -lnsl $(LFLAGS)

compress_server: compress_server.o compress_svc.o  compress_xdr.o
	$(CC) -g -o compress_server compress_server.o compress_svc.o compress_xdr.o jpeg-6b/lowres.o jpeg-6b/lowres-write.o jpeg-6b/libjpeg.a -lnsl

# object files for the executables 

compress_server.o: compress_server.c compress.h
	$(CC) $(CFLAGS) -c compress_server.c 

proxy.o: proxy.c compress.h
	$(CC) $(CFLAGS) -c proxy.c $(LFLAGS)

# compile files generated by rpcgen

compress_svc.o: compress_svc.c compress.h
	$(CC) $(CFLAGS) -c compress_svc.c

compress_clnt.o: compress_clnt.c compress.h
	$(CC) $(CFLAGS) -c compress_clnt.c

compress_xdr.o: compress_xdr.c compress.h
	$(CC) $(CFLAGS) -c compress_xdr.c

# compress.x produces compress.h, compress_clnt.c, compress_svc.c, and compress_xdr.c
# make sure we regenerate them if our interface (compress.x) changes

compress_clnt.c compress_svc.c compress_xdr.c compress.h:	compress.x
	rpcgen $(RPCGEN_FLAG) compress.x

clean:
	rm -f client proxy proxy.o compress_server compress_server.o compress_clnt.* compress_svc.* compress.h
